<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>service-tenant-gateway</artifactId>
    <packaging>jar</packaging>

    <parent>
        <groupId>com.enough</groupId>
        <artifactId>springgateway-rootmodule</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <dependencies>
        <dependency>
            <groupId>com.enough</groupId>
            <artifactId>gateway-spring-boot-starter</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <!-- 使用1.1.17，1.1.10报错 ClassNotFoundException: javax.servlet.http.HttpServlet-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${druid.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <environment>dev</environment>
            </properties>
            <dependencies>
                <!-- 开发环境下，默认基于本地EureKaServer来进行调试 -->
                <dependency>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                    <!-- 排除Jersey，用SpringMVC Rest方式-->
                    <exclusions>
                        <exclusion>
                            <groupId>com.sun.jersey</groupId>
                            <artifactId>jersey-client</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>com.sun.jersey</groupId>
                            <artifactId>jersey-core</artifactId>
                        </exclusion>
                        <exclusion>
                            <groupId>com.sun.jersey.contribs</groupId>
                            <artifactId>jersey-apache-client4</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>
<!--        <profile>-->
<!--            <id>prod</id>-->
<!--            <properties>-->
<!--                <environment>prod</environment>-->
<!--            </properties>-->
<!--            <dependencies>-->
<!--                &lt;!&ndash;生产环境打包,依赖K8s编译 &ndash;&gt;-->
<!--                <dependency>-->
<!--                    <groupId>org.springframework.cloud</groupId>-->
<!--                    <artifactId>spring-cloud-starter-kubernetes-all</artifactId>-->
<!--                </dependency>-->
<!--            </dependencies>-->
<!--        </profile>-->
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
